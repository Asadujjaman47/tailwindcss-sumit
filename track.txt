V2: Tailwind Installation
	& Editor Setup
1.
	> npm init -y

2.
	> npm i -D tailwindcss

// i face problem in lastest version:
so in install tailwindcss@v2.2.16 version.

3.
	> npx tailwindcss init

4.
create src and output folder:
in src folder:
	create a filse: tailwind.css

	write tailwind.css:
		@tailwind base;
		@tailwind components;
		@tailwind utilities;


5.
create .vscode/settings.json:
		{
			"css.validate": false,
			"tailwindCSS.emmetCompletions": true
		}

6.		
package.json > scripts:
	"build": "tailwindcss -i ./src/tailwind.css -o ./output/tailwind.css -w"

7.
	> npm run build

// now output file is ready


8.
now create index.html:
	<!DOCTYPE html>
	<html lang="en">
	<head>
		<meta charset="UTF-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>Tailwind Project</title>
-->		<link rel="stylesheet" href="./output/tailwind.css">
	</head>
	<body>
		    <div class="w-32 h-32 bg-gray-900 m-12 text-white">Hello</div>
	</body>
	</html>

// now run html file and see: is tailwind working or not?

--------------------------------------------------------------------
V3: Tailwind Utility-First
	Design Approach
task: make a card
html:


----------------------------------------------------------------
V4: Responsive Variants
	Tailwind Breakpoints


-------------------------------------------------
V5: Hover, focus & other
	State Variants


--------------------------------------------------
V6: Dark Mode
	Tailwind Variants

dark mode enable:
	(bydefault dark mode off kora thake)

	> npm run build
			// on thaka lagbe
	tailwind.config.js:
  		darkMode: "media", // or 'media' or 'class

method 1:
	// device preference kore dark or light mode hobe 

method 2:
	// use a button for dark or light
	// class use korte hobe
  		darkMode: "class", // or 'media' or 'class


html:
// dark mode korar jonno:

<body class="dark:bg-gray-900">

	// evabe ja ja change kora lagye ta korbo



stacking variant order: responsive:dark:state 





mannually dark mode:
	<html class="dark"></html>

--------------------------------------------

V7: @apply Directive
	Compose Utilities

task: component exact
		using @apply:

// optimize class:
i.
src/tailwind.css:
	/* group utilities */
	.btn{
		@apply px-4 py-1 border rounded-full text-sm font-semibold focus:outline-none focus:ring-2 focus:ring-offset-2 hover:text-white hover:border-transparent dark:focus:ring-offset-gray-800 dark:focus:border-transparent;
	}

	.btn-purple{
		@apply border-purple-200 text-purple-600 hover:bg-purple-600  focus:ring-purple-600 dark:text-purple-400 ;
	}

	.btn-green{
		@apply border-green-200 text-green-600 hover:bg-green-600 focus:ring-green-600 dark:text-green-400;
	}

ii.
index.html:
	<button class="btn btn-purple">Visit
                now</button> <button class="btn btn-green">Website</button>


// spacefic primority more:
if want forcefully apply p:

	.btn{
		@apply px-4 py-1 border rounded-full text-sm font-semibold focus:outline-none focus:ring-2 focus:ring-offset-2 hover:text-white hover:border-transparent dark:focus:ring-offset-gray-800 dark:focus:border-transparent;
->		@apply p-2;
	}

---------------------------------------------------------------

V8: @layer Directive
	Tailwind 


// component layer:
src > tailwind.css:

	@tailwind base;
	@tailwind components;
	@tailwind utilities;

ekhane tailwind layer er jonno utilities ke sobar nichay rakbo:

	@tailwind base;
	@tailwind components;


	custom component


->	@tailwind utilities;
	




// better approach:

	@tailwind base;
	@tailwind components;
	@tailwind utilities;

->	@layer components{
		
		/* group utilities */
		// custom component
	}



// base layer:

	@layer base {
		h1{
			@apply text-2xl;
		}
	}


// utilities layer:
// custom class:

	@layer utilities {
		.text-body {
			font-size: 12px;
		}
	}


summery:
	components: custom components
	base: core base change
	utilities: self utilities

-------------------------------------------

V9: Tailwind @Variants
	Directive


index.html:
 	<div class="hover:rotate-0">
        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Possimus consectetur laudantium, corrupti nostrum atque fugit fuga dignissimos eos provident culpa sit vero facilis totam dolores ratione, quisquam in tempora ad.
    </div>



src/tailwind.css:
->	@variants hover {
		.rotate-0 {
			transform: rotate(0deg);
		}
	}



order maintain:
@variants hover, focus {
    .rotate-0 {
        transform: rotate(0deg);
    }
}


---------------------------------------------------------------

V10: @responsive & 
	@screen Directives 


src\tailwind.css:

@responsive {
    .bg-gradient-brand {
        background-image: linerar-gradient(blue, green);
    }
}

----------------------------------------------------------------

V11: Tailwind Functions
	theme() & screen()

tailwind.config.js > theme:

--------------------------------------------------------

V12: Tailwind Configurations 

	purge = jekhane jekhane Tailwind use korsi, sai path/file 

	// color override/ custom color
	theme: {
		extend: {
			colors: {
				myColor: {
					300: "#D5D5D5",
				},
			},
		},
	},

 